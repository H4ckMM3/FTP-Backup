import sublime
import sublime_plugin
import os
import json
import re
from datetime import datetime
import traceback

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è FTP Backup
try:
    from . import ftp_backup
except ImportError:
    import ftp_backup

class FtpBackupUiCommand(sublime_plugin.WindowCommand):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ FTP Backup –≤ Sublime Text"""
    
    def run(self):
        """–í—ã–∑–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        options = [
            "üìÅ –í—ã–±—Ä–∞—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –±—ç–∫–∞–ø–æ–≤",
            "üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º",
            "üìÅ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –±—ç–∫–∞–ø–æ–≤",
            "üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
        ]
        
        self.window.show_quick_panel(
            options,
            self.on_option_selected,
            sublime.KEEP_OPEN_ON_FOCUS_LOST
        )
    
    def on_option_selected(self, index):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é"""
        if index == -1:
            return  # –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞
        
        if index == 0:  # –í—ã–±—Ä–∞—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –±—ç–∫–∞–ø–æ–≤
            self.window.run_command("ftp_backup_browse_folder")
        
        elif index == 1:  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º
            self.toggle_month_folders()
        
        elif index == 2:  # –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –±—ç–∫–∞–ø–æ–≤
            self.window.run_command("ftp_backup_open_folder_in_explorer")
        
        elif index == 3:  # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            self.show_info()
    
    def toggle_month_folders(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º"""
        settings = sublime.load_settings('ftp_backup.sublime-settings')
        current_value = settings.get('create_month_folder', True)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å —Ç–µ–∫—É—â–∏–º –≤—ã–±–æ—Ä–æ–º
        options = [
            f"‚úÖ –°–æ–∑–¥–∞–≤–∞—Ç—å –ø–∞–ø–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º (—Ç–µ–∫—É—â–µ–µ: {'–î–∞' if current_value else '–ù–µ—Ç'})",
            f"‚ùå –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–∞–ø–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º (—Ç–µ–∫—É—â–µ–µ: {'–ù–µ—Ç' if current_value else '–î–∞'})"
        ]
        
        self.window.show_quick_panel(
            options,
            lambda idx: self.on_month_folder_selected(idx, current_value),
            sublime.KEEP_OPEN_ON_FOCUS_LOST
        )
    
    def on_month_folder_selected(self, index, current_value):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º"""
        if index == -1:
            return  # –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞
        
        new_value = True if index == 0 else False
        
        if new_value != current_value:
            # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ—Ç–ª–∏—á–Ω–æ–µ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            settings = sublime.load_settings('ftp_backup.sublime-settings')
            settings.set('create_month_folder', new_value)
            sublime.save_settings('ftp_backup.sublime-settings')
            
            sublime.status_message(f"FTP Backup: {'–í–∫–ª—é—á–µ–Ω–æ' if new_value else '–û—Ç–∫–ª—é—á–µ–Ω–æ'} —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º")
    
    def show_info(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–µ –∏ —Å–µ—Ä–≤–µ—Ä–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–µ –∏ —Å–µ—Ä–≤–µ—Ä–µ
            task_number = getattr(ftp_backup, 'CURRENT_TASK_NUMBER', None) or "–Ω–µ –≤—ã–±—Ä–∞–Ω–∞"
            server_name = getattr(ftp_backup, 'CURRENT_SERVER', None) or "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
            
            settings = sublime.load_settings('ftp_backup.sublime-settings')
            backup_root = settings.get('backup_root', "–Ω–µ –∑–∞–¥–∞–Ω")
            create_month_folder = settings.get('create_month_folder', True)
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –≤—ã–≤–æ–¥–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            panel = self.window.create_output_panel("ftp_backup_info")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            info_text = f"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ïë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è FTP Backup
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ïë –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: {task_number}
‚ïë –¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä: {server_name}
‚ïë –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞: {backup_root}
‚ïë –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º: {'–î–∞' if create_month_folder else '–ù–µ—Ç'}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
"""
            
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø–∞–Ω–µ–ª—å
            panel.run_command("append", {"characters": info_text, "scroll_to_end": True})
            self.window.run_command("show_panel", {"panel": "output.ftp_backup_info"})
            
        except Exception as e:
            sublime.error_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")
            traceback.print_exc()


# –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ FTP Backup
class FtpBackupStatusBar:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ Sublime Text"""
    
    def __init__(self):
        self.active = False
        self.update_timer = None
    
    def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
        self.active = True
        self.update_status()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
        self.active = False
        for window in sublime.windows():
            for view in window.views():
                view.erase_status('ftp_backup')
    
    def update_status(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É"""
        if not self.active:
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É –∏ —Å–µ—Ä–≤–µ—Ä
            task = getattr(ftp_backup, 'CURRENT_TASK_NUMBER', None) or "–Ω–µ –≤—ã–±—Ä–∞–Ω–∞"
            server = getattr(ftp_backup, 'CURRENT_SERVER', None) or "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–∫–æ–Ω
            for window in sublime.windows():
                for view in window.views():
                    view.set_status('ftp_backup', f"FTP Backup: –ó–∞–¥–∞—á–∞: {task} | –°–µ—Ä–≤–µ—Ä: {server}")
        except:
            pass
        
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        self.update_timer = sublime.set_timeout(self.update_status, 5000)  # –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
status_bar = FtpBackupStatusBar()


# –ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞–≥–∏–Ω–∞
class FtpBackupStartupListener(sublime_plugin.EventListener):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞–≥–∏–Ω–∞"""
    
    def on_init(self, views):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞"""
        global status_bar
        status_bar.start()
        
    def on_exit(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ Sublime Text"""
        global status_bar
        status_bar.stop()